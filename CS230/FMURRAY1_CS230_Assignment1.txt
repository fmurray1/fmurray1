Question 1.

	 Case 1.
	      In 1982 the controll software for the trans-siberian pipeline went haywire and caused an explosion. This was caused because the soviets put a virus on the computer to spy on the us and the US found the virus and messed with it so that it wouldn't work properly. Had either or both parties left the software alone as it was originally intened to be and used it for its original purpose the malfunction probably would not have happened. 

	     http://www.devtopics.com/20-famous-software-disasters/

	 Case 2.
	      
	      In 1991 the patriot missile system had a rounding error which caused it to not detect an incoming missile which then hit an army barrack which injured and killed several people. This could have been avoided by the engineers testing the type of values they were using (ie. int, double, or float), and seeing how those could affect the rounding of a calculation and the end result. 

	      http://www.devtopics.com/20-famous-software-disasters-part-2/

Question 2.

	 A. No, there is not enough testing to be sure that the product is safe for the public and considering that it will be used in a hospital that is not a risk we can take. (Section 1.03 of the Software engineering code of ethics.)  

	 B.   Becuase my recomendation was no the public will benefit from not having a bad product as will the customer and our company if we are still able to get the bid.
	 C. My company could be harmed because waiting may mean that we will not get the bid and the company may go under. 

	 D. I have an obligation to the public to keep them safe, to the client to deliver a good product and be honest about the product. I also have an obligation to my company to ensure adequate testing of the product before we release it. (1.02, 1.03, 3.10, 3.11)


